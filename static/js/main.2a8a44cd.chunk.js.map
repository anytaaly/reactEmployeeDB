{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","console","log","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","avatar","className","style","backgroundColor","class","color","paddingRight","onClick","cursor","float","bind","border","borderRadius","protoTypes","PropTypes","object","isRequired","Contacts","map","components_contacts_Contact","Header","branding","href","Link","to","defaultProps","TextInputGroup","htmlFor","label","classes","error","formatClass","placeholder","onChange","AddContact","e","defineProperty","target","onSubmit","_ref","_this$state","newContact","preventDefault","errors","abrupt","uuid","post","history","push","_x","_x2","_this$state2","layout_TextInputGroup","About","h1","test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","components_layout_Header","Switch","Route","exact","path","component","Test","NotFound","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a8a44cd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {\" \"}\n        {this.props.children}{\" \"}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport \"./Contact.scss\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onShowClick = () => {\n    console.log(\"clicked\");\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  onDeleteClick = async (dispatch, id) => {\n    console.log(\"working\");\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n  render() {\n    const { id, name, email, phone, avatar } = this.props.contact;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div\n              className=\"card card-body mb-3\"\n              style={{ backgroundColor: \"#574b97\" }}\n            >\n              <h4 className=\"employee\">\n                <i\n                  class=\"far fa-user\"\n                  style={{ color: \"#42d8f8\", paddingRight: \"15px\" }}\n                />\n                {name}{\" \"}\n                <i\n                  className=\"fas fa-sort-down\"\n                  onClick={this.onShowClick}\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-trash-alt\"\n                  style={{\n                    cursor: \"pointer\",\n                    float: \"right\"\n                  }}\n                  onClick={this.onDeleteClick.bind(this, dispatch, id)}\n                />\n              </h4>\n              {this.state.showContactInfo && (\n                <ul\n                  className=\"list-group\"\n                  style={{ border: \"#80779d 1px solid\", borderRadius: \"5px\" }}\n                >\n                  <li className=\"list-group-item\">\n                    <i\n                      className=\"far fa-envelope\"\n                      style={{ paddingRight: \"10px\" }}\n                    />\n                    {email}\n                  </li>\n                  <li className=\"list-group-item \">\n                    {\" \"}\n                    <i\n                      className=\"fas fa-headphones-alt\"\n                      style={{ paddingRight: \"10px\" }}\n                    />\n                    {phone}\n                  </li>\n                </ul>\n              )}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nContact.protoTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport Contact from \"./Contact\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <div>\n              <h1 className=\" mb-4 mt-4\">Contact List</h1>\n              {value.contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default Contacts;\n","import React from \"react\";\nimport \"./Header.css\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark mb-3 py-2 my-navbar\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {\" \"}\n          <i\n            className=\"fas fa-layer-group\"\n            style={{ cursor: \"pointer\", color: \"white\", paddingRight: \"10px\" }}\n          />\n          {branding}{\" \"}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextInputGroup = props => {\n  const formatClass = () => {\n    let classes = \"form-control form-control-lg\";\n    classes += props.error ? \" is-invalid\" : \"\";\n    return classes;\n  };\n  return (\n    <div>\n      <div className=\"form-group\">\n        <label htmlFor={props.name}> {props.label} </label>\n        <input\n          type={props.type}\n          className={formatClass()}\n          name={props.name}\n          placeholder={props.placeholder}\n          value={props.value}\n          onChange={props.onChange}\n        />\n        {props.error && <div className=\"invalid-feedback\"> {props.error}</div>}\n      </div>\n    </div>\n  );\n};\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport uuid from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nimport \"./AddContact.css\";\n\nclass AddContact extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      avatar: \"\",\n      errors: {}\n    };\n  }\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //Check for Errors Validation\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n    const newContact = {\n      id: uuid(),\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    //Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: \"\"\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <h1 className=\"card-header my-header\"> Add Contact </h1>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    type=\"text\"\n                    label=\"Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    placeholder=\"Enter Full Name Here\"\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    name=\"email\"\n                    type=\"email\"\n                    label=\"Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    placeholder=\"Enter Email Here\"\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    name=\"phone\"\n                    type=\"text\"\n                    label=\"Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    placeholder=\"Enter Contact Details Here\"\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-block\"\n                    style={{ backgroundColor: \"#574b97\", color: \"#fff\" }}\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default AddContact;\n","import React from \"react\";\n\nconst About = props => {\n  return (\n    <div>\n      <p> This is about us page</p>\n    </div>\n  );\n};\nexport default About;\n","import React from \"react\";\n\nexport default function h1() {\n  return (\n    <div>\n      <h1 className=\"display-4\"> 404 Page Not Found</h1>\n      <p className=\"lead\"> Sorry, that page does not exist </p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nclass test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1> {title} </h1>\n        <p> {body} </p>\n      </div>\n    );\n  }\n}\nexport default test;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"./context\";\n\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/test\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div>\n            <Header branding=\"Contact Manager Portal\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}